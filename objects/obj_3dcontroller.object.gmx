<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 100
pitch = -3;
direction = 180;

//Start 3D
d3d_start();
d3d_set_culling(false);
d3d_set_lighting(1);
d3d_light_define_ambient(c_white);

d3d_set_lighting(1);


d3d_light_define_ambient(c_gray);

d3d_light_enable(0,1);
d3d_light_define_point(0,x,y,0,200,c_yellow);
d3d_light_enable(1,1);
d3d_light_define_point(1,x+40,y,0,200,c_red);

//Load texutres
global.texture_floor = background_get_texture(tex_floor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouselook
direction -= ((display_mouse_get_x()) - display_get_width() /2) /2;
pitch -= ((display_mouse_get_y()) - display_get_height() /2) /2;

if (pitch &gt;= 85) pitch = 85;
if (pitch &lt;= -85) pitch = -85;

display_mouse_set(display_get_width() / 2, display_get_height() / 2); 

if (keyboard_check_direct(ord("W"))) {
    y-=4*keyboard_check_direct(vk_shift);
}

if (keyboard_check_direct(ord("S"))) {
    y+=4*keyboard_check_direct(vk_shift);
}

if (keyboard_check_direct(ord("A"))) {
    x-=4*keyboard_check_direct(vk_shift);
}

if (keyboard_check_direct(ord("D"))) {
    x+=4*keyboard_check_direct(vk_shift);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the camera
xt=x+cos(degtorad(direction));
yt=y-sin(degtorad(direction));
zt=z+tan(degtorad(pitch));
//draw camera
d3d_set_projection(x,y,z,    xt,yt,zt,   0,0,1);
with (obj_hydrabase) {
    event_perform(ev_draw,0);    
}

with (obj_hydra_joystick) {
    event_perform(ev_draw,0);    
}

with (obj_floor_ceiling) {
    event_perform(ev_draw,0);    
}

d3d_set_hidden(false);
d3d_set_projection_ortho(0,0,view_wview,view_hview,0);
draw_text(10,10,"FPS: "+string(fps));
with (obj_hydra_joystick) {
    draw_text(10,30+60*controller_id,"Joy "+string(controller_id)+" X:"+string(x));
    draw_text(200,30+60*controller_id,"Joy "+string(controller_id)+" Y:"+string(y));
    draw_text(400,30+60*controller_id,"Joy "+string(controller_id)+" Z:"+string(z));

    draw_text(10,50+60*controller_id,"Joy "+string(controller_id)+" Roll:"+string(roll));
    draw_text(200,50+60*controller_id,"Joy "+string(controller_id)+" Pitch:"+string(pitch));
    draw_text(400,50+60*controller_id,"Joy "+string(controller_id)+" Yaw:"+string(yaw));
    
  
    for (i = 0; i&lt;3; i++) {
        for (ii = 0; ii&lt;3; ii++) {
            draw_text((controller_id*200)+10+i*50,200+ii*20,GMHD_getJoystickMatrix(controller_id,i,ii));
        }
    }
}
d3d_set_hidden(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
